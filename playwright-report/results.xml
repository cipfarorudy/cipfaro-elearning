<testsuites id="" name="" tests="100" failures="90" skipped="0" errors="0" time="672.436625">
<testsuite name="admin-demo.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="chromium" tests="3" failures="1" skipped="0" time="46.242" errors="0">
<testcase name="CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" classname="admin-demo.spec.ts" time="30.034">
<failure message="admin-demo.spec.ts:13:7 Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" type="FAILURE">
<![CDATA[  [chromium] › admin-demo.spec.ts:13:7 › CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -> Admin Dashboard -> Session Demo 

    Test timeout of 30000ms exceeded.

    Error: page.waitForURL: Test timeout of 30000ms exceeded.
    =========================== logs ===========================
    waiting for navigation until "load"
    ============================================================

      27 |
      28 |     // Attendre la redirection après connexion
    > 29 |     await page.waitForURL(/\/dashboard/);
         |                ^
      30 |     await expect(page.locator("h1")).toContainText("Dashboard");
      31 |
      32 |     // 3. Naviguer vers /admin/dashboard
        at D:\cipfaro-elearning\tests\e2e\admin-demo.spec.ts:29:16

    Error Context: ..\..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Validation des identifiants seed" classname="admin-demo.spec.ts" time="13.852">
<system-out>
<![CDATA[❌ Échec de connexion avec : admin@cipfaro.com
❌ Échec de connexion avec : admin@test.com
❌ Échec de connexion avec : demo@cipfaro.com
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Exploration de l&apos;interface admin" classname="admin-demo.spec.ts" time="2.356">
<system-out>
<![CDATA[📄 Structure de la page admin capturée
🔗 0 éléments interactifs trouvés
📚 4 éléments liés aux sessions trouvés
🔍 Exploration de l'interface admin terminée
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="chromium" tests="4" failures="4" skipped="0" time="39.908" errors="0">
<testcase name="Authentification E2E › devrait permettre la connexion avec des identifiants valides" classname="auth.spec.ts" time="4.358">
<failure message="auth.spec.ts:20:7 devrait permettre la connexion avec des identifiants valides" type="FAILURE">
<![CDATA[  [chromium] › auth.spec.ts:20:7 › Authentification E2E › devrait permettre la connexion avec des identifiants valides 

    Error: locator.textContent: Error: strict mode violation: locator('[role="alert"], .text-red-700') resolved to 2 elements:
        1) <p class="text-sm text-red-700">Erreur interne du serveur</p> aka getByText('Erreur interne du serveur')
        2) <div role="alert" aria-live="assertive" id="__next-route-announcer__"></div> aka locator('[id="__next-route-announcer__"]')

    Call log:
      - waiting for locator('[role="alert"], .text-red-700')


      43 |     const errorElement = page.locator('[role="alert"], .text-red-700');
      44 |     if ((await errorElement.count()) > 0) {
    > 45 |       const errorText = await errorElement.textContent();
         |                                            ^
      46 |       console.log("Erreur visible:", errorText);
      47 |     }
      48 |   });
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:45:44

    Error Context: ..\..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[PAGE LOG: Failed to load resource: the server responded with a status of 500 (Internal Server Error)
URL actuelle après connexion: http://localhost:3000/login/v2

[[ATTACHMENT|..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rejeter les identifiants invalides" classname="auth.spec.ts" time="12.154">
<failure message="auth.spec.ts:50:7 devrait rejeter les identifiants invalides" type="FAILURE">
<![CDATA[  [chromium] › auth.spec.ts:50:7 › Authentification E2E › devrait rejeter les identifiants invalides 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="error-message"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  10000ms

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('[data-testid="error-message"]')


      58 |
      59 |     // Vérifier qu'un message d'erreur apparaît
    > 60 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
         |                                                                 ^
      61 |     await expect(page.locator('[data-testid="error-message"]')).toContainText(
      62 |       "identifiants invalides"
      63 |     );
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:60:65

    Error Context: ..\..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait permettre la déconnexion" classname="auth.spec.ts" time="11.476">
<failure message="auth.spec.ts:69:7 devrait permettre la déconnexion" type="FAILURE">
<![CDATA[  [chromium] › auth.spec.ts:69:7 › Authentification E2E › devrait permettre la déconnexion ─────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      75 |
      76 |     // Attendre d'être sur le dashboard
    > 77 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      78 |
      79 |     // Cliquer sur le bouton de déconnexion
      80 |     await page.click('[data-testid="logout-button"]');
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:77:24

    Error Context: ..\..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rediriger vers la connexion si pas authentifié" classname="auth.spec.ts" time="11.92">
<failure message="auth.spec.ts:86:7 devrait rediriger vers la connexion si pas authentifié" type="FAILURE">
<![CDATA[  [chromium] › auth.spec.ts:86:7 › Authentification E2E › devrait rediriger vers la connexion si pas authentifié 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/login/
    Received string:  "http://localhost:3000/dashboard"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/dashboard"


      91 |
      92 |     // Vérifier la redirection vers la page de connexion
    > 93 |     await expect(page).toHaveURL(/\/login/);
         |                        ^
      94 |   });
      95 | });
      96 |
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:93:24

    Error Context: ..\..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-chromium\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="dashboard.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="chromium" tests="6" failures="6" skipped="0" time="65.027" errors="0">
<testcase name="Dashboard E2E › devrait afficher les statistiques du dashboard" classname="dashboard.spec.ts" time="10.943">
<failure message="dashboard.spec.ts:19:7 devrait afficher les statistiques du dashboard" type="FAILURE">
<![CDATA[  [chromium] › dashboard.spec.ts:19:7 › Dashboard E2E › devrait afficher les statistiques du dashboard 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les modules" classname="dashboard.spec.ts" time="10.788">
<failure message="dashboard.spec.ts:38:7 devrait permettre la navigation vers les modules" type="FAILURE">
<![CDATA[  [chromium] › dashboard.spec.ts:38:7 › Dashboard E2E › devrait permettre la navigation vers les modules 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les rapports" classname="dashboard.spec.ts" time="10.825">
<failure message="dashboard.spec.ts:47:7 devrait permettre la navigation vers les rapports" type="FAILURE">
<![CDATA[  [chromium] › dashboard.spec.ts:47:7 › Dashboard E2E › devrait permettre la navigation vers les rapports 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait afficher les activités récentes" classname="dashboard.spec.ts" time="10.757">
<failure message="dashboard.spec.ts:58:7 devrait afficher les activités récentes" type="FAILURE">
<![CDATA[  [chromium] › dashboard.spec.ts:58:7 › Dashboard E2E › devrait afficher les activités récentes ────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait être responsive sur mobile" classname="dashboard.spec.ts" time="10.869">
<failure message="dashboard.spec.ts:67:7 devrait être responsive sur mobile" type="FAILURE">
<![CDATA[  [chromium] › dashboard.spec.ts:67:7 › Dashboard E2E › devrait être responsive sur mobile ─────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre le rafraîchissement des données" classname="dashboard.spec.ts" time="10.845">
<failure message="dashboard.spec.ts:85:7 devrait permettre le rafraîchissement des données" type="FAILURE">
<![CDATA[  [chromium] › dashboard.spec.ts:85:7 › Dashboard E2E › devrait permettre le rafraîchissement des données 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-chromium\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="scorm.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="chromium" tests="7" failures="7" skipped="0" time="75.117" errors="0">
<testcase name="SCORM E2E › devrait afficher la liste des modules disponibles" classname="scorm.spec.ts" time="10.753">
<failure message="scorm.spec.ts:19:7 devrait afficher la liste des modules disponibles" type="FAILURE">
<![CDATA[  [chromium] › scorm.spec.ts:19:7 › SCORM E2E › devrait afficher la liste des modules disponibles ──

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de lancer un module SCORM" classname="scorm.spec.ts" time="10.718">
<failure message="scorm.spec.ts:33:7 devrait permettre de lancer un module SCORM" type="FAILURE">
<![CDATA[  [chromium] › scorm.spec.ts:33:7 › SCORM E2E › devrait permettre de lancer un module SCORM ────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait initialiser l&apos;API SCORM correctement" classname="scorm.spec.ts" time="10.742">
<failure message="scorm.spec.ts:49:7 devrait initialiser l&apos;API SCORM correctement" type="FAILURE">
<![CDATA[  [chromium] › scorm.spec.ts:49:7 › SCORM E2E › devrait initialiser l'API SCORM correctement ───────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait sauvegarder les données CMI" classname="scorm.spec.ts" time="10.708">
<failure message="scorm.spec.ts:67:7 devrait sauvegarder les données CMI" type="FAILURE">
<![CDATA[  [chromium] › scorm.spec.ts:67:7 › SCORM E2E › devrait sauvegarder les données CMI ────────────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait afficher le progrès du module" classname="scorm.spec.ts" time="10.736">
<failure message="scorm.spec.ts:99:7 devrait afficher le progrès du module" type="FAILURE">
<![CDATA[  [chromium] › scorm.spec.ts:99:7 › SCORM E2E › devrait afficher le progrès du module ──────────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de reprendre un module en cours" classname="scorm.spec.ts" time="10.686">
<failure message="scorm.spec.ts:114:7 devrait permettre de reprendre un module en cours" type="FAILURE">
<![CDATA[  [chromium] › scorm.spec.ts:114:7 › SCORM E2E › devrait permettre de reprendre un module en cours ─

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait gérer les erreurs de chargement SCORM" classname="scorm.spec.ts" time="10.774">
<failure message="scorm.spec.ts:139:7 devrait gérer les erreurs de chargement SCORM" type="FAILURE">
<![CDATA[  [chromium] › scorm.spec.ts:139:7 › SCORM E2E › devrait gérer les erreurs de chargement SCORM ─────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-chromium\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="admin-demo.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="firefox" tests="3" failures="1" skipped="0" time="46.041" errors="0">
<testcase name="CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" classname="admin-demo.spec.ts" time="30.051">
<failure message="admin-demo.spec.ts:13:7 Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" type="FAILURE">
<![CDATA[  [firefox] › admin-demo.spec.ts:13:7 › CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -> Admin Dashboard -> Session Demo 

    Test timeout of 30000ms exceeded.

    Error: page.waitForURL: Test timeout of 30000ms exceeded.
    =========================== logs ===========================
    waiting for navigation until "load"
    ============================================================

      27 |
      28 |     // Attendre la redirection après connexion
    > 29 |     await page.waitForURL(/\/dashboard/);
         |                ^
      30 |     await expect(page.locator("h1")).toContainText("Dashboard");
      31 |
      32 |     // 3. Naviguer vers /admin/dashboard
        at D:\cipfaro-elearning\tests\e2e\admin-demo.spec.ts:29:16

    Error Context: ..\..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Validation des identifiants seed" classname="admin-demo.spec.ts" time="13.937">
<system-out>
<![CDATA[❌ Échec de connexion avec : admin@cipfaro.com
❌ Échec de connexion avec : admin@test.com
❌ Échec de connexion avec : demo@cipfaro.com
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Exploration de l&apos;interface admin" classname="admin-demo.spec.ts" time="2.053">
<system-out>
<![CDATA[📄 Structure de la page admin capturée
🔗 0 éléments interactifs trouvés
📚 4 éléments liés aux sessions trouvés
🔍 Exploration de l'interface admin terminée
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="firefox" tests="4" failures="4" skipped="0" time="46.456" errors="0">
<testcase name="Authentification E2E › devrait permettre la connexion avec des identifiants valides" classname="auth.spec.ts" time="5.189">
<failure message="auth.spec.ts:20:7 devrait permettre la connexion avec des identifiants valides" type="FAILURE">
<![CDATA[  [firefox] › auth.spec.ts:20:7 › Authentification E2E › devrait permettre la connexion avec des identifiants valides 

    Error: locator.textContent: Error: strict mode violation: locator('[role="alert"], .text-red-700') resolved to 2 elements:
        1) <p class="text-sm text-red-700">Erreur interne du serveur</p> aka getByText('Erreur interne du serveur')
        2) <div role="alert" aria-live="assertive" id="__next-route-announcer__"></div> aka locator('[id="__next-route-announcer__"]')

    Call log:
      - waiting for locator('[role="alert"], .text-red-700')


      43 |     const errorElement = page.locator('[role="alert"], .text-red-700');
      44 |     if ((await errorElement.count()) > 0) {
    > 45 |       const errorText = await errorElement.textContent();
         |                                            ^
      46 |       console.log("Erreur visible:", errorText);
      47 |     }
      48 |   });
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:45:44

    Error Context: ..\..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[URL actuelle après connexion: http://localhost:3000/login/v2

[[ATTACHMENT|..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rejeter les identifiants invalides" classname="auth.spec.ts" time="13.702">
<failure message="auth.spec.ts:50:7 devrait rejeter les identifiants invalides" type="FAILURE">
<![CDATA[  [firefox] › auth.spec.ts:50:7 › Authentification E2E › devrait rejeter les identifiants invalides 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="error-message"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  10000ms

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('[data-testid="error-message"]')


      58 |
      59 |     // Vérifier qu'un message d'erreur apparaît
    > 60 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
         |                                                                 ^
      61 |     await expect(page.locator('[data-testid="error-message"]')).toContainText(
      62 |       "identifiants invalides"
      63 |     );
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:60:65

    Error Context: ..\..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait permettre la déconnexion" classname="auth.spec.ts" time="14.195">
<failure message="auth.spec.ts:69:7 devrait permettre la déconnexion" type="FAILURE">
<![CDATA[  [firefox] › auth.spec.ts:69:7 › Authentification E2E › devrait permettre la déconnexion ──────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      75 |
      76 |     // Attendre d'être sur le dashboard
    > 77 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      78 |
      79 |     // Cliquer sur le bouton de déconnexion
      80 |     await page.click('[data-testid="logout-button"]');
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:77:24

    Error Context: ..\..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rediriger vers la connexion si pas authentifié" classname="auth.spec.ts" time="13.37">
<failure message="auth.spec.ts:86:7 devrait rediriger vers la connexion si pas authentifié" type="FAILURE">
<![CDATA[  [firefox] › auth.spec.ts:86:7 › Authentification E2E › devrait rediriger vers la connexion si pas authentifié 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/login/
    Received string:  "http://localhost:3000/dashboard"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/dashboard"


      91 |
      92 |     // Vérifier la redirection vers la page de connexion
    > 93 |     await expect(page).toHaveURL(/\/login/);
         |                        ^
      94 |   });
      95 | });
      96 |
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:93:24

    Error Context: ..\..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-firefox\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="dashboard.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="firefox" tests="6" failures="6" skipped="0" time="76.519" errors="0">
<testcase name="Dashboard E2E › devrait afficher les statistiques du dashboard" classname="dashboard.spec.ts" time="12.655">
<failure message="dashboard.spec.ts:19:7 devrait afficher les statistiques du dashboard" type="FAILURE">
<![CDATA[  [firefox] › dashboard.spec.ts:19:7 › Dashboard E2E › devrait afficher les statistiques du dashboard 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les modules" classname="dashboard.spec.ts" time="12.674">
<failure message="dashboard.spec.ts:38:7 devrait permettre la navigation vers les modules" type="FAILURE">
<![CDATA[  [firefox] › dashboard.spec.ts:38:7 › Dashboard E2E › devrait permettre la navigation vers les modules 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les rapports" classname="dashboard.spec.ts" time="12.939">
<failure message="dashboard.spec.ts:47:7 devrait permettre la navigation vers les rapports" type="FAILURE">
<![CDATA[  [firefox] › dashboard.spec.ts:47:7 › Dashboard E2E › devrait permettre la navigation vers les rapports 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait afficher les activités récentes" classname="dashboard.spec.ts" time="12.554">
<failure message="dashboard.spec.ts:58:7 devrait afficher les activités récentes" type="FAILURE">
<![CDATA[  [firefox] › dashboard.spec.ts:58:7 › Dashboard E2E › devrait afficher les activités récentes ─────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait être responsive sur mobile" classname="dashboard.spec.ts" time="12.971">
<failure message="dashboard.spec.ts:67:7 devrait être responsive sur mobile" type="FAILURE">
<![CDATA[  [firefox] › dashboard.spec.ts:67:7 › Dashboard E2E › devrait être responsive sur mobile ──────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre le rafraîchissement des données" classname="dashboard.spec.ts" time="12.726">
<failure message="dashboard.spec.ts:85:7 devrait permettre le rafraîchissement des données" type="FAILURE">
<![CDATA[  [firefox] › dashboard.spec.ts:85:7 › Dashboard E2E › devrait permettre le rafraîchissement des données 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-firefox\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="scorm.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="firefox" tests="7" failures="7" skipped="0" time="89.897" errors="0">
<testcase name="SCORM E2E › devrait afficher la liste des modules disponibles" classname="scorm.spec.ts" time="12.701">
<failure message="scorm.spec.ts:19:7 devrait afficher la liste des modules disponibles" type="FAILURE">
<![CDATA[  [firefox] › scorm.spec.ts:19:7 › SCORM E2E › devrait afficher la liste des modules disponibles ───

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de lancer un module SCORM" classname="scorm.spec.ts" time="13.219">
<failure message="scorm.spec.ts:33:7 devrait permettre de lancer un module SCORM" type="FAILURE">
<![CDATA[  [firefox] › scorm.spec.ts:33:7 › SCORM E2E › devrait permettre de lancer un module SCORM ─────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait initialiser l&apos;API SCORM correctement" classname="scorm.spec.ts" time="12.659">
<failure message="scorm.spec.ts:49:7 devrait initialiser l&apos;API SCORM correctement" type="FAILURE">
<![CDATA[  [firefox] › scorm.spec.ts:49:7 › SCORM E2E › devrait initialiser l'API SCORM correctement ────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait sauvegarder les données CMI" classname="scorm.spec.ts" time="12.839">
<failure message="scorm.spec.ts:67:7 devrait sauvegarder les données CMI" type="FAILURE">
<![CDATA[  [firefox] › scorm.spec.ts:67:7 › SCORM E2E › devrait sauvegarder les données CMI ─────────────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait afficher le progrès du module" classname="scorm.spec.ts" time="13.042">
<failure message="scorm.spec.ts:99:7 devrait afficher le progrès du module" type="FAILURE">
<![CDATA[  [firefox] › scorm.spec.ts:99:7 › SCORM E2E › devrait afficher le progrès du module ───────────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de reprendre un module en cours" classname="scorm.spec.ts" time="12.542">
<failure message="scorm.spec.ts:114:7 devrait permettre de reprendre un module en cours" type="FAILURE">
<![CDATA[  [firefox] › scorm.spec.ts:114:7 › SCORM E2E › devrait permettre de reprendre un module en cours ──

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait gérer les erreurs de chargement SCORM" classname="scorm.spec.ts" time="12.895">
<failure message="scorm.spec.ts:139:7 devrait gérer les erreurs de chargement SCORM" type="FAILURE">
<![CDATA[  [firefox] › scorm.spec.ts:139:7 › SCORM E2E › devrait gérer les erreurs de chargement SCORM ──────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-firefox\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="admin-demo.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="webkit" tests="3" failures="1" skipped="0" time="44.308" errors="0">
<testcase name="CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" classname="admin-demo.spec.ts" time="30.039">
<failure message="admin-demo.spec.ts:13:7 Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" type="FAILURE">
<![CDATA[  [webkit] › admin-demo.spec.ts:13:7 › CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -> Admin Dashboard -> Session Demo 

    Test timeout of 30000ms exceeded.

    Error: page.waitForURL: Test timeout of 30000ms exceeded.
    =========================== logs ===========================
    waiting for navigation until "load"
    ============================================================

      27 |
      28 |     // Attendre la redirection après connexion
    > 29 |     await page.waitForURL(/\/dashboard/);
         |                ^
      30 |     await expect(page.locator("h1")).toContainText("Dashboard");
      31 |
      32 |     // 3. Naviguer vers /admin/dashboard
        at D:\cipfaro-elearning\tests\e2e\admin-demo.spec.ts:29:16

    Error Context: ..\..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Validation des identifiants seed" classname="admin-demo.spec.ts" time="12.111">
<system-out>
<![CDATA[❌ Échec de connexion avec : admin@cipfaro.com
❌ Échec de connexion avec : admin@test.com
❌ Échec de connexion avec : demo@cipfaro.com
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Exploration de l&apos;interface admin" classname="admin-demo.spec.ts" time="2.158">
<system-out>
<![CDATA[📄 Structure de la page admin capturée
🔗 0 éléments interactifs trouvés
📚 4 éléments liés aux sessions trouvés
🔍 Exploration de l'interface admin terminée
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="webkit" tests="4" failures="4" skipped="0" time="40.847" errors="0">
<testcase name="Authentification E2E › devrait permettre la connexion avec des identifiants valides" classname="auth.spec.ts" time="4.51">
<failure message="auth.spec.ts:20:7 devrait permettre la connexion avec des identifiants valides" type="FAILURE">
<![CDATA[  [webkit] › auth.spec.ts:20:7 › Authentification E2E › devrait permettre la connexion avec des identifiants valides 

    Error: locator.textContent: Error: strict mode violation: locator('[role="alert"], .text-red-700') resolved to 2 elements:
        1) <p class="text-sm text-red-700">Erreur interne du serveur</p> aka getByText('Erreur interne du serveur')
        2) <div role="alert" aria-live="assertive" id="__next-route-announcer__"></div> aka locator('[id="__next-route-announcer__"]')

    Call log:
      - waiting for locator('[role="alert"], .text-red-700')


      43 |     const errorElement = page.locator('[role="alert"], .text-red-700');
      44 |     if ((await errorElement.count()) > 0) {
    > 45 |       const errorText = await errorElement.textContent();
         |                                            ^
      46 |       console.log("Erreur visible:", errorText);
      47 |     }
      48 |   });
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:45:44

    Error Context: ..\..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[PAGE LOG: Failed to load resource: the server responded with a status of 500 (Internal Server Error)
URL actuelle après connexion: http://localhost:3000/login/v2

[[ATTACHMENT|..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rejeter les identifiants invalides" classname="auth.spec.ts" time="12.674">
<failure message="auth.spec.ts:50:7 devrait rejeter les identifiants invalides" type="FAILURE">
<![CDATA[  [webkit] › auth.spec.ts:50:7 › Authentification E2E › devrait rejeter les identifiants invalides ─

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="error-message"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  10000ms

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('[data-testid="error-message"]')


      58 |
      59 |     // Vérifier qu'un message d'erreur apparaît
    > 60 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
         |                                                                 ^
      61 |     await expect(page.locator('[data-testid="error-message"]')).toContainText(
      62 |       "identifiants invalides"
      63 |     );
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:60:65

    Error Context: ..\..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait permettre la déconnexion" classname="auth.spec.ts" time="12.159">
<failure message="auth.spec.ts:69:7 devrait permettre la déconnexion" type="FAILURE">
<![CDATA[  [webkit] › auth.spec.ts:69:7 › Authentification E2E › devrait permettre la déconnexion ───────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      75 |
      76 |     // Attendre d'être sur le dashboard
    > 77 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      78 |
      79 |     // Cliquer sur le bouton de déconnexion
      80 |     await page.click('[data-testid="logout-button"]');
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:77:24

    Error Context: ..\..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rediriger vers la connexion si pas authentifié" classname="auth.spec.ts" time="11.504">
<failure message="auth.spec.ts:86:7 devrait rediriger vers la connexion si pas authentifié" type="FAILURE">
<![CDATA[  [webkit] › auth.spec.ts:86:7 › Authentification E2E › devrait rediriger vers la connexion si pas authentifié 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/login/
    Received string:  "http://localhost:3000/dashboard"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/dashboard"


      91 |
      92 |     // Vérifier la redirection vers la page de connexion
    > 93 |     await expect(page).toHaveURL(/\/login/);
         |                        ^
      94 |   });
      95 | });
      96 |
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:93:24

    Error Context: ..\..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-webkit\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="dashboard.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="webkit" tests="6" failures="6" skipped="0" time="67.389" errors="0">
<testcase name="Dashboard E2E › devrait afficher les statistiques du dashboard" classname="dashboard.spec.ts" time="11.084">
<failure message="dashboard.spec.ts:19:7 devrait afficher les statistiques du dashboard" type="FAILURE">
<![CDATA[  [webkit] › dashboard.spec.ts:19:7 › Dashboard E2E › devrait afficher les statistiques du dashboard 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les modules" classname="dashboard.spec.ts" time="11.138">
<failure message="dashboard.spec.ts:38:7 devrait permettre la navigation vers les modules" type="FAILURE">
<![CDATA[  [webkit] › dashboard.spec.ts:38:7 › Dashboard E2E › devrait permettre la navigation vers les modules 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les rapports" classname="dashboard.spec.ts" time="11.727">
<failure message="dashboard.spec.ts:47:7 devrait permettre la navigation vers les rapports" type="FAILURE">
<![CDATA[  [webkit] › dashboard.spec.ts:47:7 › Dashboard E2E › devrait permettre la navigation vers les rapports 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait afficher les activités récentes" classname="dashboard.spec.ts" time="11.218">
<failure message="dashboard.spec.ts:58:7 devrait afficher les activités récentes" type="FAILURE">
<![CDATA[  [webkit] › dashboard.spec.ts:58:7 › Dashboard E2E › devrait afficher les activités récentes ──────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait être responsive sur mobile" classname="dashboard.spec.ts" time="11.123">
<failure message="dashboard.spec.ts:67:7 devrait être responsive sur mobile" type="FAILURE">
<![CDATA[  [webkit] › dashboard.spec.ts:67:7 › Dashboard E2E › devrait être responsive sur mobile ───────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre le rafraîchissement des données" classname="dashboard.spec.ts" time="11.099">
<failure message="dashboard.spec.ts:85:7 devrait permettre le rafraîchissement des données" type="FAILURE">
<![CDATA[  [webkit] › dashboard.spec.ts:85:7 › Dashboard E2E › devrait permettre le rafraîchissement des données 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-webkit\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="scorm.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="webkit" tests="7" failures="7" skipped="0" time="77.6" errors="0">
<testcase name="SCORM E2E › devrait afficher la liste des modules disponibles" classname="scorm.spec.ts" time="11.054">
<failure message="scorm.spec.ts:19:7 devrait afficher la liste des modules disponibles" type="FAILURE">
<![CDATA[  [webkit] › scorm.spec.ts:19:7 › SCORM E2E › devrait afficher la liste des modules disponibles ────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de lancer un module SCORM" classname="scorm.spec.ts" time="11.027">
<failure message="scorm.spec.ts:33:7 devrait permettre de lancer un module SCORM" type="FAILURE">
<![CDATA[  [webkit] › scorm.spec.ts:33:7 › SCORM E2E › devrait permettre de lancer un module SCORM ──────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait initialiser l&apos;API SCORM correctement" classname="scorm.spec.ts" time="11.037">
<failure message="scorm.spec.ts:49:7 devrait initialiser l&apos;API SCORM correctement" type="FAILURE">
<![CDATA[  [webkit] › scorm.spec.ts:49:7 › SCORM E2E › devrait initialiser l'API SCORM correctement ─────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait sauvegarder les données CMI" classname="scorm.spec.ts" time="11.016">
<failure message="scorm.spec.ts:67:7 devrait sauvegarder les données CMI" type="FAILURE">
<![CDATA[  [webkit] › scorm.spec.ts:67:7 › SCORM E2E › devrait sauvegarder les données CMI ──────────────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait afficher le progrès du module" classname="scorm.spec.ts" time="11.148">
<failure message="scorm.spec.ts:99:7 devrait afficher le progrès du module" type="FAILURE">
<![CDATA[  [webkit] › scorm.spec.ts:99:7 › SCORM E2E › devrait afficher le progrès du module ────────────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de reprendre un module en cours" classname="scorm.spec.ts" time="11.246">
<failure message="scorm.spec.ts:114:7 devrait permettre de reprendre un module en cours" type="FAILURE">
<![CDATA[  [webkit] › scorm.spec.ts:114:7 › SCORM E2E › devrait permettre de reprendre un module en cours ───

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait gérer les erreurs de chargement SCORM" classname="scorm.spec.ts" time="11.072">
<failure message="scorm.spec.ts:139:7 devrait gérer les erreurs de chargement SCORM" type="FAILURE">
<![CDATA[  [webkit] › scorm.spec.ts:139:7 › SCORM E2E › devrait gérer les erreurs de chargement SCORM ───────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-webkit\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="admin-demo.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="Mobile Chrome" tests="3" failures="1" skipped="0" time="44.081" errors="0">
<testcase name="CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" classname="admin-demo.spec.ts" time="30.041">
<failure message="admin-demo.spec.ts:13:7 Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" type="FAILURE">
<![CDATA[  [Mobile Chrome] › admin-demo.spec.ts:13:7 › CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -> Admin Dashboard -> Session Demo 

    Test timeout of 30000ms exceeded.

    Error: page.waitForURL: Test timeout of 30000ms exceeded.
    =========================== logs ===========================
    waiting for navigation until "load"
    ============================================================

      27 |
      28 |     // Attendre la redirection après connexion
    > 29 |     await page.waitForURL(/\/dashboard/);
         |                ^
      30 |     await expect(page.locator("h1")).toContainText("Dashboard");
      31 |
      32 |     // 3. Naviguer vers /admin/dashboard
        at D:\cipfaro-elearning\tests\e2e\admin-demo.spec.ts:29:16

    Error Context: ..\..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Validation des identifiants seed" classname="admin-demo.spec.ts" time="12.305">
<system-out>
<![CDATA[❌ Échec de connexion avec : admin@cipfaro.com
❌ Échec de connexion avec : admin@test.com
❌ Échec de connexion avec : demo@cipfaro.com
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Exploration de l&apos;interface admin" classname="admin-demo.spec.ts" time="1.735">
<system-out>
<![CDATA[📄 Structure de la page admin capturée
🔗 0 éléments interactifs trouvés
📚 4 éléments liés aux sessions trouvés
🔍 Exploration de l'interface admin terminée
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="Mobile Chrome" tests="4" failures="4" skipped="0" time="38.242" errors="0">
<testcase name="Authentification E2E › devrait permettre la connexion avec des identifiants valides" classname="auth.spec.ts" time="3.983">
<failure message="auth.spec.ts:20:7 devrait permettre la connexion avec des identifiants valides" type="FAILURE">
<![CDATA[  [Mobile Chrome] › auth.spec.ts:20:7 › Authentification E2E › devrait permettre la connexion avec des identifiants valides 

    Error: locator.textContent: Error: strict mode violation: locator('[role="alert"], .text-red-700') resolved to 2 elements:
        1) <p class="text-sm text-red-700">Erreur interne du serveur</p> aka getByText('Erreur interne du serveur')
        2) <div role="alert" aria-live="assertive" id="__next-route-announcer__"></div> aka locator('[id="__next-route-announcer__"]')

    Call log:
      - waiting for locator('[role="alert"], .text-red-700')


      43 |     const errorElement = page.locator('[role="alert"], .text-red-700');
      44 |     if ((await errorElement.count()) > 0) {
    > 45 |       const errorText = await errorElement.textContent();
         |                                            ^
      46 |       console.log("Erreur visible:", errorText);
      47 |     }
      48 |   });
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:45:44

    Error Context: ..\..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[PAGE LOG: Failed to load resource: the server responded with a status of 500 (Internal Server Error)
URL actuelle après connexion: http://localhost:3000/login/v2

[[ATTACHMENT|..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rejeter les identifiants invalides" classname="auth.spec.ts" time="11.582">
<failure message="auth.spec.ts:50:7 devrait rejeter les identifiants invalides" type="FAILURE">
<![CDATA[  [Mobile Chrome] › auth.spec.ts:50:7 › Authentification E2E › devrait rejeter les identifiants invalides 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="error-message"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  10000ms

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('[data-testid="error-message"]')


      58 |
      59 |     // Vérifier qu'un message d'erreur apparaît
    > 60 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
         |                                                                 ^
      61 |     await expect(page.locator('[data-testid="error-message"]')).toContainText(
      62 |       "identifiants invalides"
      63 |     );
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:60:65

    Error Context: ..\..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait permettre la déconnexion" classname="auth.spec.ts" time="11.309">
<failure message="auth.spec.ts:69:7 devrait permettre la déconnexion" type="FAILURE">
<![CDATA[  [Mobile Chrome] › auth.spec.ts:69:7 › Authentification E2E › devrait permettre la déconnexion ────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      75 |
      76 |     // Attendre d'être sur le dashboard
    > 77 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      78 |
      79 |     // Cliquer sur le bouton de déconnexion
      80 |     await page.click('[data-testid="logout-button"]');
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:77:24

    Error Context: ..\..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rediriger vers la connexion si pas authentifié" classname="auth.spec.ts" time="11.368">
<failure message="auth.spec.ts:86:7 devrait rediriger vers la connexion si pas authentifié" type="FAILURE">
<![CDATA[  [Mobile Chrome] › auth.spec.ts:86:7 › Authentification E2E › devrait rediriger vers la connexion si pas authentifié 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/login/
    Received string:  "http://localhost:3000/dashboard"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/dashboard"


      91 |
      92 |     // Vérifier la redirection vers la page de connexion
    > 93 |     await expect(page).toHaveURL(/\/login/);
         |                        ^
      94 |   });
      95 | });
      96 |
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:93:24

    Error Context: ..\..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="dashboard.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="Mobile Chrome" tests="6" failures="6" skipped="0" time="64.977" errors="0">
<testcase name="Dashboard E2E › devrait afficher les statistiques du dashboard" classname="dashboard.spec.ts" time="10.93">
<failure message="dashboard.spec.ts:19:7 devrait afficher les statistiques du dashboard" type="FAILURE">
<![CDATA[  [Mobile Chrome] › dashboard.spec.ts:19:7 › Dashboard E2E › devrait afficher les statistiques du dashboard 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les modules" classname="dashboard.spec.ts" time="10.749">
<failure message="dashboard.spec.ts:38:7 devrait permettre la navigation vers les modules" type="FAILURE">
<![CDATA[  [Mobile Chrome] › dashboard.spec.ts:38:7 › Dashboard E2E › devrait permettre la navigation vers les modules 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les rapports" classname="dashboard.spec.ts" time="10.684">
<failure message="dashboard.spec.ts:47:7 devrait permettre la navigation vers les rapports" type="FAILURE">
<![CDATA[  [Mobile Chrome] › dashboard.spec.ts:47:7 › Dashboard E2E › devrait permettre la navigation vers les rapports 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait afficher les activités récentes" classname="dashboard.spec.ts" time="11.112">
<failure message="dashboard.spec.ts:58:7 devrait afficher les activités récentes" type="FAILURE">
<![CDATA[  [Mobile Chrome] › dashboard.spec.ts:58:7 › Dashboard E2E › devrait afficher les activités récentes 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait être responsive sur mobile" classname="dashboard.spec.ts" time="10.745">
<failure message="dashboard.spec.ts:67:7 devrait être responsive sur mobile" type="FAILURE">
<![CDATA[  [Mobile Chrome] › dashboard.spec.ts:67:7 › Dashboard E2E › devrait être responsive sur mobile ────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre le rafraîchissement des données" classname="dashboard.spec.ts" time="10.757">
<failure message="dashboard.spec.ts:85:7 devrait permettre le rafraîchissement des données" type="FAILURE">
<![CDATA[  [Mobile Chrome] › dashboard.spec.ts:85:7 › Dashboard E2E › devrait permettre le rafraîchissement des données 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="scorm.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="Mobile Chrome" tests="7" failures="7" skipped="0" time="75.656" errors="0">
<testcase name="SCORM E2E › devrait afficher la liste des modules disponibles" classname="scorm.spec.ts" time="10.757">
<failure message="scorm.spec.ts:19:7 devrait afficher la liste des modules disponibles" type="FAILURE">
<![CDATA[  [Mobile Chrome] › scorm.spec.ts:19:7 › SCORM E2E › devrait afficher la liste des modules disponibles 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de lancer un module SCORM" classname="scorm.spec.ts" time="10.809">
<failure message="scorm.spec.ts:33:7 devrait permettre de lancer un module SCORM" type="FAILURE">
<![CDATA[  [Mobile Chrome] › scorm.spec.ts:33:7 › SCORM E2E › devrait permettre de lancer un module SCORM ───

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait initialiser l&apos;API SCORM correctement" classname="scorm.spec.ts" time="10.779">
<failure message="scorm.spec.ts:49:7 devrait initialiser l&apos;API SCORM correctement" type="FAILURE">
<![CDATA[  [Mobile Chrome] › scorm.spec.ts:49:7 › SCORM E2E › devrait initialiser l'API SCORM correctement ──

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait sauvegarder les données CMI" classname="scorm.spec.ts" time="10.746">
<failure message="scorm.spec.ts:67:7 devrait sauvegarder les données CMI" type="FAILURE">
<![CDATA[  [Mobile Chrome] › scorm.spec.ts:67:7 › SCORM E2E › devrait sauvegarder les données CMI ───────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait afficher le progrès du module" classname="scorm.spec.ts" time="10.762">
<failure message="scorm.spec.ts:99:7 devrait afficher le progrès du module" type="FAILURE">
<![CDATA[  [Mobile Chrome] › scorm.spec.ts:99:7 › SCORM E2E › devrait afficher le progrès du module ─────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de reprendre un module en cours" classname="scorm.spec.ts" time="10.84">
<failure message="scorm.spec.ts:114:7 devrait permettre de reprendre un module en cours" type="FAILURE">
<![CDATA[  [Mobile Chrome] › scorm.spec.ts:114:7 › SCORM E2E › devrait permettre de reprendre un module en cours 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait gérer les erreurs de chargement SCORM" classname="scorm.spec.ts" time="10.963">
<failure message="scorm.spec.ts:139:7 devrait gérer les erreurs de chargement SCORM" type="FAILURE">
<![CDATA[  [Mobile Chrome] › scorm.spec.ts:139:7 › SCORM E2E › devrait gérer les erreurs de chargement SCORM 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-Mobile-Chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-Mobile-Chrome\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="admin-demo.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="Mobile Safari" tests="3" failures="1" skipped="0" time="43.607" errors="0">
<testcase name="CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" classname="admin-demo.spec.ts" time="30.04">
<failure message="admin-demo.spec.ts:13:7 Parcours complet : Login -&gt; Admin Dashboard -&gt; Session Demo" type="FAILURE">
<![CDATA[  [Mobile Safari] › admin-demo.spec.ts:13:7 › CIPFARO V2 - Parcours Admin Demo › Parcours complet : Login -> Admin Dashboard -> Session Demo 

    Test timeout of 30000ms exceeded.

    Error: page.waitForURL: Test timeout of 30000ms exceeded.
    =========================== logs ===========================
    waiting for navigation until "load"
    ============================================================

      27 |
      28 |     // Attendre la redirection après connexion
    > 29 |     await page.waitForURL(/\/dashboard/);
         |                ^
      30 |     await expect(page.locator("h1")).toContainText("Dashboard");
      31 |
      32 |     // 3. Naviguer vers /admin/dashboard
        at D:\cipfaro-elearning\tests\e2e\admin-demo.spec.ts:29:16

    Error Context: ..\..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\admin-demo-CIPFARO-V2---Pa-60c8e-in-Dashboard---Session-Demo-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Validation des identifiants seed" classname="admin-demo.spec.ts" time="12.069">
<system-out>
<![CDATA[❌ Échec de connexion avec : admin@cipfaro.com
❌ Échec de connexion avec : admin@test.com
❌ Échec de connexion avec : demo@cipfaro.com
]]>
</system-out>
</testcase>
<testcase name="CIPFARO V2 - Parcours Admin Demo › Exploration de l&apos;interface admin" classname="admin-demo.spec.ts" time="1.498">
<system-out>
<![CDATA[📄 Structure de la page admin capturée
🔗 0 éléments interactifs trouvés
📚 4 éléments liés aux sessions trouvés
🔍 Exploration de l'interface admin terminée
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="Mobile Safari" tests="4" failures="4" skipped="0" time="40.097" errors="0">
<testcase name="Authentification E2E › devrait permettre la connexion avec des identifiants valides" classname="auth.spec.ts" time="4.404">
<failure message="auth.spec.ts:20:7 devrait permettre la connexion avec des identifiants valides" type="FAILURE">
<![CDATA[  [Mobile Safari] › auth.spec.ts:20:7 › Authentification E2E › devrait permettre la connexion avec des identifiants valides 

    Error: locator.textContent: Error: strict mode violation: locator('[role="alert"], .text-red-700') resolved to 2 elements:
        1) <p class="text-sm text-red-700">Erreur interne du serveur</p> aka getByText('Erreur interne du serveur')
        2) <div role="alert" aria-live="assertive" id="__next-route-announcer__"></div> aka locator('[id="__next-route-announcer__"]')

    Call log:
      - waiting for locator('[role="alert"], .text-red-700')


      43 |     const errorElement = page.locator('[role="alert"], .text-red-700');
      44 |     if ((await errorElement.count()) > 0) {
    > 45 |       const errorText = await errorElement.textContent();
         |                                            ^
      46 |       console.log("Erreur visible:", errorText);
      47 |     }
      48 |   });
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:45:44

    Error Context: ..\..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[PAGE LOG: Failed to load resource: the server responded with a status of 500 (Internal Server Error)
URL actuelle après connexion: http://localhost:3000/login/v2

[[ATTACHMENT|..\test-results\auth-Authentification-E2E--88147-ec-des-identifiants-valides-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rejeter les identifiants invalides" classname="auth.spec.ts" time="11.945">
<failure message="auth.spec.ts:50:7 devrait rejeter les identifiants invalides" type="FAILURE">
<![CDATA[  [Mobile Safari] › auth.spec.ts:50:7 › Authentification E2E › devrait rejeter les identifiants invalides 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator('[data-testid="error-message"]')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  10000ms

    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for locator('[data-testid="error-message"]')


      58 |
      59 |     // Vérifier qu'un message d'erreur apparaît
    > 60 |     await expect(page.locator('[data-testid="error-message"]')).toBeVisible();
         |                                                                 ^
      61 |     await expect(page.locator('[data-testid="error-message"]')).toContainText(
      62 |       "identifiants invalides"
      63 |     );
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:60:65

    Error Context: ..\..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--69faf--les-identifiants-invalides-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait permettre la déconnexion" classname="auth.spec.ts" time="12.15">
<failure message="auth.spec.ts:69:7 devrait permettre la déconnexion" type="FAILURE">
<![CDATA[  [Mobile Safari] › auth.spec.ts:69:7 › Authentification E2E › devrait permettre la déconnexion ────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      75 |
      76 |     // Attendre d'être sur le dashboard
    > 77 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      78 |
      79 |     // Cliquer sur le bouton de déconnexion
      80 |     await page.click('[data-testid="logout-button"]');
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:77:24

    Error Context: ..\..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E-devrait-permettre-la-déconnexion-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentification E2E › devrait rediriger vers la connexion si pas authentifié" classname="auth.spec.ts" time="11.598">
<failure message="auth.spec.ts:86:7 devrait rediriger vers la connexion si pas authentifié" type="FAILURE">
<![CDATA[  [Mobile Safari] › auth.spec.ts:86:7 › Authentification E2E › devrait rediriger vers la connexion si pas authentifié 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/login/
    Received string:  "http://localhost:3000/dashboard"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/dashboard"


      91 |
      92 |     // Vérifier la redirection vers la page de connexion
    > 93 |     await expect(page).toHaveURL(/\/login/);
         |                        ^
      94 |   });
      95 | });
      96 |
        at D:\cipfaro-elearning\tests\e2e\auth.spec.ts:93:24

    Error Context: ..\..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\auth-Authentification-E2E--9bc99-onnexion-si-pas-authentifié-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="dashboard.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="Mobile Safari" tests="6" failures="6" skipped="0" time="66.632" errors="0">
<testcase name="Dashboard E2E › devrait afficher les statistiques du dashboard" classname="dashboard.spec.ts" time="11.135">
<failure message="dashboard.spec.ts:19:7 devrait afficher les statistiques du dashboard" type="FAILURE">
<![CDATA[  [Mobile Safari] › dashboard.spec.ts:19:7 › Dashboard E2E › devrait afficher les statistiques du dashboard 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-4b6b6-s-statistiques-du-dashboard-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les modules" classname="dashboard.spec.ts" time="11.159">
<failure message="dashboard.spec.ts:38:7 devrait permettre la navigation vers les modules" type="FAILURE">
<![CDATA[  [Mobile Safari] › dashboard.spec.ts:38:7 › Dashboard E2E › devrait permettre la navigation vers les modules 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-ffdea-navigation-vers-les-modules-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre la navigation vers les rapports" classname="dashboard.spec.ts" time="11.084">
<failure message="dashboard.spec.ts:47:7 devrait permettre la navigation vers les rapports" type="FAILURE">
<![CDATA[  [Mobile Safari] › dashboard.spec.ts:47:7 › Dashboard E2E › devrait permettre la navigation vers les rapports 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-09679-avigation-vers-les-rapports-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait afficher les activités récentes" classname="dashboard.spec.ts" time="11.08">
<failure message="dashboard.spec.ts:58:7 devrait afficher les activités récentes" type="FAILURE">
<![CDATA[  [Mobile Safari] › dashboard.spec.ts:58:7 › Dashboard E2E › devrait afficher les activités récentes 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-43e99-cher-les-activités-récentes-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait être responsive sur mobile" classname="dashboard.spec.ts" time="11.048">
<failure message="dashboard.spec.ts:67:7 devrait être responsive sur mobile" type="FAILURE">
<![CDATA[  [Mobile Safari] › dashboard.spec.ts:67:7 › Dashboard E2E › devrait être responsive sur mobile ────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-devrait-être-responsive-sur-mobile-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Dashboard E2E › devrait permettre le rafraîchissement des données" classname="dashboard.spec.ts" time="11.126">
<failure message="dashboard.spec.ts:85:7 devrait permettre le rafraîchissement des données" type="FAILURE">
<![CDATA[  [Mobile Safari] › dashboard.spec.ts:85:7 › Dashboard E2E › devrait permettre le rafraîchissement des données 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être sur le dashboard
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher les statistiques du dashboard", async ({ page }) => {
        at D:\cipfaro-elearning\tests\e2e\dashboard.spec.ts:16:24

    Error Context: ..\..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\dashboard-Dashboard-E2E-de-b3299-afraîchissement-des-données-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="scorm.spec.ts" timestamp="2025-09-22T02:14:33.035Z" hostname="Mobile Safari" tests="7" failures="7" skipped="0" time="79.279" errors="0">
<testcase name="SCORM E2E › devrait afficher la liste des modules disponibles" classname="scorm.spec.ts" time="11.057">
<failure message="scorm.spec.ts:19:7 devrait afficher la liste des modules disponibles" type="FAILURE">
<![CDATA[  [Mobile Safari] › scorm.spec.ts:19:7 › SCORM E2E › devrait afficher la liste des modules disponibles 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-af-0c7d7-ste-des-modules-disponibles-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de lancer un module SCORM" classname="scorm.spec.ts" time="11.109">
<failure message="scorm.spec.ts:33:7 devrait permettre de lancer un module SCORM" type="FAILURE">
<![CDATA[  [Mobile Safari] › scorm.spec.ts:33:7 › SCORM E2E › devrait permettre de lancer un module SCORM ───

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-permettre-de-lancer-un-module-SCORM-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait initialiser l&apos;API SCORM correctement" classname="scorm.spec.ts" time="11.07">
<failure message="scorm.spec.ts:49:7 devrait initialiser l&apos;API SCORM correctement" type="FAILURE">
<![CDATA[  [Mobile Safari] › scorm.spec.ts:49:7 › SCORM E2E › devrait initialiser l'API SCORM correctement ──

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-initialiser-l-API-SCORM-correctement-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait sauvegarder les données CMI" classname="scorm.spec.ts" time="11.034">
<failure message="scorm.spec.ts:67:7 devrait sauvegarder les données CMI" type="FAILURE">
<![CDATA[  [Mobile Safari] › scorm.spec.ts:67:7 › SCORM E2E › devrait sauvegarder les données CMI ───────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-sauvegarder-les-données-CMI-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait afficher le progrès du module" classname="scorm.spec.ts" time="11.148">
<failure message="scorm.spec.ts:99:7 devrait afficher le progrès du module" type="FAILURE">
<![CDATA[  [Mobile Safari] › scorm.spec.ts:99:7 › SCORM E2E › devrait afficher le progrès du module ─────────

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-afficher-le-progrès-du-module-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait permettre de reprendre un module en cours" classname="scorm.spec.ts" time="12.457">
<failure message="scorm.spec.ts:114:7 devrait permettre de reprendre un module en cours" type="FAILURE">
<![CDATA[  [Mobile Safari] › scorm.spec.ts:114:7 › SCORM E2E › devrait permettre de reprendre un module en cours 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        13 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-pe-faa5d-eprendre-un-module-en-cours-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="SCORM E2E › devrait gérer les erreurs de chargement SCORM" classname="scorm.spec.ts" time="11.404">
<failure message="scorm.spec.ts:139:7 devrait gérer les erreurs de chargement SCORM" type="FAILURE">
<![CDATA[  [Mobile Safari] › scorm.spec.ts:139:7 › SCORM E2E › devrait gérer les erreurs de chargement SCORM 

    Error: expect(page).toHaveURL(expected) failed

    Expected pattern: /\/dashboard/
    Received string:  "http://localhost:3000/login"
    Timeout: 10000ms

    Call log:
      - Expect "toHaveURL" with timeout 10000ms
        14 × unexpected value "http://localhost:3000/login"


      14 |
      15 |     // Attendre d'être connecté
    > 16 |     await expect(page).toHaveURL(/\/dashboard/);
         |                        ^
      17 |   });
      18 |
      19 |   test("devrait afficher la liste des modules disponibles", async ({
        at D:\cipfaro-elearning\tests\e2e\scorm.spec.ts:16:24

    Error Context: ..\..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-Mobile-Safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\test-results\scorm-SCORM-E2E-devrait-gé-e812d-erreurs-de-chargement-SCORM-Mobile-Safari\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
</testsuites>